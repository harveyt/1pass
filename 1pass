#!/bin/bash
#
# 1Password helper.
#

function usage()
{
    echo "usage: 1pass ...

Simple frontend 1Password information using 'op' 1Password CLI command.

-p title		Print the password for the given entry with 'title'.
-u title		Print the username for the given entry with 'title'.
-U title		Print the URL for the given entry with 'title'.
-s regexp		Print any titles which match the case-insensitive extended RE 'regexp'.
-l			List all available titles.
" >&2
    exit 1
}

function op_validate_query()
{
    local op_key="$1" op_field="$2" op_status="$3" op_value="$4"
    if [[ "$op_value" == "" || $op_status -ne 0 ]]; then
	echo "Cannot get $op_field for $op_key" >&2
	exit 1
    fi
    echo "$op_value"
}

function get_op_item_field()
{
    local item_key="$1"
    local item_field_type="$2"
    local item_field="$3"
    local op_value="$(op get item "$item_key" 2>/dev/null | jq -r '.details.fields[] | select(.'"$item_field_type"'=="'"$item_field"'").value' 2>/dev/null)"
    local op_status=${PIPESTATUS[0]}
    op_validate_query "$item_key" "$item_field" "$op_status" "$op_value"
}

function get_op_item_overview()
{
    local item_key="$1"
    local item_field="$2"
    local op_value="$(op get item "$item_key" 2>/dev/null | jq -r '.overview.'"$item_field" 2>/dev/null)"
    local op_status=${PIPESTATUS[0]}
    op_validate_query "$item_key" "$item_field" "$op_status" "$op_value"
}

function get_op_item_username()
{
    local item_key="$1"
    get_op_item_field "$item_key" "designation" "username"
}

function get_op_item_password()
{
    local item_key="$1"
    get_op_item_field "$item_key" "designation" "password"
}

function get_op_item_url()
{
    local item_key="$1"
    get_op_item_overview "$item_key" "url"
}

function list_op_items()
{
    op list items 2>/dev/null | jq -r '.[] | select(.templateUuid == "001").overview.title' | sort
    local op_status=${PIPESTATUS[0]}
    if [[ $op_status -ne 0 ]]; then
	echo "Cannot get list of 1Password items" >&2
	exit 1
    fi
}

function search_op_items()
{
    local search="$1"
    list_op_items | egrep -i "$search"
    local op_status=${PIPESTATUS[0]}
    if [[ $op_status -ne 0 ]]; then
	exit $op_status
    fi
}

while getopts p:u:U:s:l c
do
    case $c in
	p)
	    get_op_item_password "$OPTARG"
	    ;;
	u)
	    get_op_item_username "$OPTARG"
	    ;;
	U)
	    get_op_item_url "$OPTARG"
	    ;;
	s)
	    search_op_items "$OPTARG"
	    ;;
	l)
	    list_op_items
	    ;;
	*)
	    usage
	    ;;
    esac
done
shift $((OPTIND - 1))
if [[ $# -ne 0 ]]; then
    usage
fi
exit 0
